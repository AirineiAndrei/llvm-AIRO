	.text								.text
	.file	"hello-world.c"						.file	"hello-world.c"
	.globl	main                            # -- Begin fu		.globl	main                            # -- Begin fu
	.p2align	4, 0x90						.p2align	4, 0x90
	.type	main,@function						.type	main,@function
main:                                   # @main			main:                                   # @main
	.cfi_startproc							.cfi_startproc
# %bb.0:							# %bb.0:
	pushq	%rbp							pushq	%rbp
	.cfi_def_cfa_offset 16						.cfi_def_cfa_offset 16
	pushq	%rbx							pushq	%rbx
	.cfi_def_cfa_offset 24						.cfi_def_cfa_offset 24
	pushq	%rax							pushq	%rax
	.cfi_def_cfa_offset 32						.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24						.cfi_offset %rbx, -24
	.cfi_offset %rbp, -16						.cfi_offset %rbp, -16
	movl	$101, %ebp				      |		movl	$100, %ebp
	leaq	.Lstr(%rip), %rbx					leaq	.Lstr(%rip), %rbx
							      >		movq	%rbx, %rdi
							      >		callq	puts@PLT
							      >		testl	%ebp, %ebp
							      >		je	.LBB0_3
	.p2align	4, 0x90						.p2align	4, 0x90
.LBB0_1:                                # =>This Inner Loop H |	.LBB0_2:                                # =>This Inner Loop H
							      >		movq	%rbx, %rdi
							      >		callq	puts@PLT
							      >		movq	%rbx, %rdi
							      >		callq	puts@PLT
							      >		movq	%rbx, %rdi
							      >		callq	puts@PLT
							      >		movq	%rbx, %rdi
							      >		callq	puts@PLT
							      >		movq	%rbx, %rdi
							      >		callq	puts@PLT
							      >		movq	%rbx, %rdi
							      >		callq	puts@PLT
							      >		movq	%rbx, %rdi
							      >		callq	puts@PLT
							      >		movq	%rbx, %rdi
							      >		callq	puts@PLT
							      >		movq	%rbx, %rdi
							      >		callq	puts@PLT
							      >		addl	$-10, %ebp
	movq	%rbx, %rdi						movq	%rbx, %rdi
	callq	puts@PLT						callq	puts@PLT
	decl	%ebp					      |		testl	%ebp, %ebp
	jne	.LBB0_1					      |		jne	.LBB0_2
# %bb.2:						      |	.LBB0_3:
	xorl	%eax, %eax						xorl	%eax, %eax
	addq	$8, %rsp						addq	$8, %rsp
	.cfi_def_cfa_offset 24						.cfi_def_cfa_offset 24
	popq	%rbx							popq	%rbx
	.cfi_def_cfa_offset 16						.cfi_def_cfa_offset 16
	popq	%rbp							popq	%rbp
	.cfi_def_cfa_offset 8						.cfi_def_cfa_offset 8
	retq								retq
.Lfunc_end0:							.Lfunc_end0:
	.size	main, .Lfunc_end0-main					.size	main, .Lfunc_end0-main
	.cfi_endproc							.cfi_endproc
                                        # -- End function	                                        # -- End function
	.type	.Lstr,@object                   # @str			.type	.Lstr,@object                   # @str
	.section	.rodata.str1.1,"aMS",@progbits,1		.section	.rodata.str1.1,"aMS",@progbits,1
.Lstr:								.Lstr:
	.asciz	"Hello, World!"						.asciz	"Hello, World!"
	.size	.Lstr, 14						.size	.Lstr, 14

	.ident	"clang version 19.0.0git (https://github.com/		.ident	"clang version 19.0.0git (https://github.com/
	.section	".note.GNU-stack","",@progbits			.section	".note.GNU-stack","",@progbits
	.addrsig							.addrsig
